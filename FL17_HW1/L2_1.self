https://drive.google.com/file/d/1XR_UPXrLSxQorkJbv5o-9tLK-R_oHJIi/view

https://elearn.epam.com/courses/course-v1:EPAM+RD3+0821/courseware/b98a983ab3ff4605853300b89c9205b6/e0839a589ef7439dbcc2046a9c1d6311/4?activate_block_id=block-v1%3AEPAM%2BRD3%2B0821%2Btype%40vertical%2Bblock%40bcbf8b6a4109478f952da168cc1f558d

L2.0
Контентные модели — это набор правил, которые описывают контекст, в котором можно использовать элемент и ожидаемое содержимое элемента. 

Flow content — контент потока, к которому относится большинство элементов, используемых в основной части документов или веб-приложений.
Например: <article>, <aside> и др.

Interactive content - интерактивный контент, который предполагат взаимодействие с пользователем.
Например: <label>, <select>, <textarea>, <video> (если присутствует атрибут controls).

Metadata content — контент метаданных. К нему относится контент, устанавливающий представление или поведение остальной части контента или устанавливающий взаимосвязь HTML-документа с другими документами (например, с таблицами стилей css), а также отвечающий за внешний вид или поведение контента на странице.
Например: <link>, <meta> и др.

Phrasing content — текстовый контент. Текстовое содержимое представлено элементами для разметки текста внутри абзацев.
Например: <b>, <bdi>, <bdo>, <br>, <button> и др.

Embedded content — встроенный контент, который импортируется в документ из других источников, другого языка разметки или другого пространства имён.
Например: <audio>, <iframe>, <img> и др.

Heading content — контент, содержащий заголовки. Определяет заголовки разделов.
Например: <h1>, <h2>, <h3>.

Sectioning content — контент, который представляет собой секции страницы. Определяется областью заголовков и колонтитулов.
Например: <article>, <aside>, <nav>, <section>.

тег — это элемент гипертекстовой разметки, выполняющий свою функцию.

Создание открывающего тега. Для этого используется знак "<", затем указывается имя элемента (список символов без пробела), затем через пробел возможны атрибуты и завершается процесс создания тега знаком ">".

Создание контента элемента. Элемент может содержать контент — данные, которые добавляются между открывающим и закрывающим тегом. Если контент не вводить, тогда элемент будет пустым.

Создание закрывающего тега. Он начинается с ввода знаков "</", затем указывается то же имя элемента, что и в открывающем теге, и завершается ввод с помощью символа ">".

HTML-атрибуты сообщают браузеру каким образом должен отображаться тот или иной элемент страницы. Атрибуты задают элементам дополнительные свойства и расширяют возможности. 
тег img добавляет на страницу картинку;
атрибут src указывает путь, где лежит файл с картинкой;
атрибут alt задает альтернативный контент;
атрибуты width и height задают размер картинки при загрузке, указываются без единиц измерения.
логический атрибут controls добавляет кнопки управления к проигрывателю. Если этот атрибут отсутствует, у аудиопроигрывателя кнопок управления не будет

Порядок атрибутов в элементе не имеет значения и на результат отображения элемента не влияет.

Для чего же нужен атрибут accesskey? С помощью атрибута accesskey, можно получить доступ к элементу, при помощи клавиатуры, используя сочетания клавиш. Обычно этот атрибут применяется для ссылок, кнопок и полей формы. Например, если задано accesskey="S", то в различных браузерах для него работают сочетания клавиш, представленные на картинке.

Чаще всего, при использовании комбинации клавиш, элемент получает фокус, но конкретное действие зависит от свойств элемента. Например:
для элемента <a> произойдёт переход по ссылке;
для текстовых полей можно вводить текст;
для флажков (<input type="checkbox">) будет поставлена галочка и т. д.

Атрибут lang
Глобальный атрибут lang указывает язык, на котором написан текст внутри текущего элемента. Помните, что хорошей практикой является использовать этот атрибут для элемента html. Браузер будет использовать значение атрибута lang для правильного отображения некоторых символов.
Также использование атрибута lang помогает системам перевода определить, какие языковые правила нужно использовать, а программам чтения - правильно выбрать язык озвучивания контента. 

Атрибут class
Позволяет установить стилевой класс, который связывает нужный элемент со стилевым оформлением. Для этого атрибута можно указывать несколько значений, разделяя их пробелом.

Атрибут data-*
Нужен для создания пользовательских атрибутов, для хранения любой информации. Данные могут быть получены с помощью скриптов или через функцию attr(). Имя атрибута должно обязательно начинаться с data-, дальше произвольное название латинскими буквами.

L2,1
href Показывает путь к связываемому файлу (обязательный атрибут)
media Определяет устройство, для которого следует применять стилевое оформление
type MIME-тип данных подключаемого файла
rel Определяет отношения между текущим документом и файлом, на который делается ссылка

Элемент <title> обозначает заголовок документа. При этом <title> — это не часть документа, он не отображается напрямую на веб-странице. Текст, который находиться в этом элементе, отображается на вкладке браузера.

Элемент <meta> содержит данные (метатеги), которые нужны для хранения информации, необходимой для браузеров и поисковых систем. Так, например, поисковые системы обращаются к метатегам, чтобы получить описание сайта, ключевые слова и другие данные.

charset Задаёт кодировку документа
content Устанавливает значение атрибута, заданного с помощью name или http-equiv
http-equiv Позволяет изменять поведение серверов и пользователей
name Имя метатега, также косвенно устанавливает его предназначение

Атрибут name может принимать значения application-name, author, description, keywords, viewport и другие.
Расмотрим подробнее <meta name="viewport">.
Тег <meta> с атрибутом name="viewport" нужен для корректного отображения веб-страницы на смартфонах, планшетах и других устройствах, имеющих высокую плотность пикселей (>200ppi). Этот метатег чаще применяется для адаптивных сайтов, но с его помощью так же можно улучшить представление веб-страницы, имеющей фиксированную или гибкую разметку. Особенности адаптации веб-страниц для просмотра на разных устройствах мы будем рассматривать далее в этом курсе.

Viewport — это область на экране устройства, которая видна пользователю без прокрутки экрана.

width=device-width
width=800px
initial-scale=1
minimal-scale,maximal-scale,user-scale


Элемент <body> состоит из двух тегов <body>…</body> и контента между ними. Элемент <body> нужен для хранения содержимого веб-страницы, которое отображается в окне браузера. Контент, который нужно выводить в документе, располагают внутри этого  контейнера. К такому содержимому относится текст, изображения, теги, скрипты JavaScript и т. д.

L2.2

Семантические элементы (семантические теги) позволяют указать роль контента на странице. Эта дополнительная информация помогает роботам/индексаторам, таким как Google и Bing, лучше понять какой контент важен, какой является второстепенным, какой используется для навигации и так далее. Добавляя семантические элементы на веб страницу, вы даете дополнительные данные, которые помогают поисковикам понимать роли и относительную важность разных частей веб страницы. Кроме того, семантические теги дают возможность программам чтения с экрана выделять важный контент на странице и отображать его. Таким образом контент становится еще более доступным для разных категорий пользователей.

Элемент <header> предназначен для того, чтобы содержать заголовок раздела. Кроме этого, <header> можно использовать для обертывания оглавления раздела, формы поиска или любых соответствующих логотипов. В одном документе разрешается определять несколько элементов <header>.
<header class="header">
    <h1 class="logo">
        <a href="#"><img src="logo.png" alt="Логотип компании"></a>
    </h1>
    
Для указания времени в примере использован тег <time>, который также является семантическим.

Элемент <nav> представляет собой раздел страницы, который ссылается на другие страницы или их части. То есть это раздел с навигационными ссылками.
НЕ ВСЕ ссылки в документе следует размещать внутри элемента <nav>.
Элемент <nav> предназначен только для основного блока навигационных ссылок, например, главного меню сайта. Допускается использовать блок <nav> для навигации по странице.

Элемент <footer> определяет "подвал" документа или раздела и должен содержать информацию о содержащем его элементе. Обычно в "подвале" размещают информацию об авторе документа, ссылки на условия использования текста, информацию об авторских правах, контактные данные 
В одном документе разрешается определять несколько элементов <footer>. В элементе <footer> допускается размещать элемент <nav>.

Элемент <aside> представляет собой раздел страницы, состоящий из контента, который косвенно связан с контентом вокруг элемента <aside> и который может считаться отдельным от этого контента. Такие разделы часто представлены как боковые панели, содержащие блоки рекламы, виджеты социальных сетей, группы элементов навигации и другого контента. Контент внутри элемента <aside> должен соотноситься с окружающим контентом.


Элемент <main> представляет собой основное содержимое документа. Содержимое должно быть уникальным и не включать типовые блоки вроде шапки сайта, подвала, навигации, боковой панели, формы поиска и т. п. В документе не должно быть более одного элемента <main>.

Элемент <article> определяет независимый, самодостаточный контент. Это может быть сообщение на форуме, статья, запись в блоге, пользовательский комментарий и другое. Контент, помещенный в этот элемент, должен иметь смысл сам по себе, т. е. должен быть понятен в отрыве от остальных частей веб-сайта. Может дублироваться на других страницах сайта и содержать внутри другие элементы <article>.
Элемент должен иметь в качестве дочернего (вложенного) элемента заголовок от <h1> до <h6>.

Элемент <section> представляет собой общий раздел документа. В соответствии со спецификацией W3C по HTML5: "Раздел (section) — это тематически сгруппированный контент, как правило с заголовком."
Например. Домашняя страница сайта компании содержит такие блоки: Наши преимущества, Наши клиенты, Наша команда
Обычно такие блоки оформляются с помощью элемента <section>. Элемент <section> должен иметь в качестве дочернего (вложенного) элемента заголовок от <h1> до <h6>.
Родительские элементы <section> можно создавать с одним или несколькими вложенными элементами <article>.
